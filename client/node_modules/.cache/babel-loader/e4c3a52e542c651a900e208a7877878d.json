{"ast":null,"code":"var _jsxFileName = \"/Users/idris/Documents/Dev/plex-cinema/client/src/App.js\";\nimport React, { Component, useEffect, useState, useContext } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect, Provider } from \"react-redux\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport Cart from \"./components/Cart/Cart\";\nimport NavigationBar from \"./components/Layout/NavigationBar\";\nimport Register from \"./components/Auth/Register\";\nimport Login from \"./components/Auth/Login\";\nimport PrivateRoute from \"./components/Routing/PrivateRoute\";\nimport MovieList from \"./components/Movies/MovieList\";\nimport Landing from \"./components/Layout/Landing\";\nimport { loadUser } from \"./actions/auth\";\nimport store from \"./store\";\nimport Alert from \"./components/Layout/Alerts\";\nimport MovieDetails from \"./components/Movies/MovieDetails\";\nimport Checkout from \"./components/Cart/Checkout\";\nimport TvShows from \"./components/TvShows/TvShows\";\nimport TvShowDetails from \"./components/TvShows/TvShowDetails\";\nimport TopRatedMovies from \"./components/Movies/TopRatedMovies\";\nimport UpcomingMovies from \"./components/Movies/UpcomingMovies\";\nimport { googleAuth } from \"./actions/auth\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Spinner from \"./components/Spinner/LoadSpinner\";\nimport { fetchItems } from \"./actions/movie\";\nimport \"./App.css\";\nimport { createBrowserHistory } from \"history\";\nimport MovieNav from \"./components/Movies/MovieNav\";\nconst history = createBrowserHistory();\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = ({\n  authenticated\n}) => {\n  const {\n    user,\n    isAuthenticated,\n    isLoading,\n    getAccessTokenSilently\n  } = useAuth0();\n  useEffect(() => {\n    store.store.dispatch(loadUser());\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    history: history,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NavigationBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Alert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: MovieList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/register\",\n    component: Register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/login\",\n    component: !authenticated ? Login : MovieList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/tv_shows\",\n    component: TvShows,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/movie_info/:id\",\n    component: MovieDetails,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/upcoming\",\n    component: UpcomingMovies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/top_rated\",\n    component: TopRatedMovies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PrivateRoute, {\n    path: \"/show_details\",\n    component: TvShowDetails,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/cart\",\n    component: Cart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PrivateRoute, {\n    path: \"/checkout\",\n    component: Checkout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"\",\n    component: () => /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        textAlign: \"center\",\n        fontSize: \"70px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, \"(404) Page not found.\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst mapStateToProps = state => ({\n  authenticated: state.auth.authenticated,\n  isLoading: state.auth.isLoading\n});\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/idris/Documents/Dev/plex-cinema/client/src/App.js"],"names":["React","Component","useEffect","useState","useContext","BrowserRouter","Router","Route","Switch","Redirect","connect","Provider","setAuthToken","Cart","NavigationBar","Register","Login","PrivateRoute","MovieList","Landing","loadUser","store","Alert","MovieDetails","Checkout","TvShows","TvShowDetails","TopRatedMovies","UpcomingMovies","googleAuth","useAuth0","Spinner","fetchItems","createBrowserHistory","MovieNav","history","localStorage","token","App","authenticated","user","isAuthenticated","isLoading","getAccessTokenSilently","dispatch","textAlign","fontSize","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState, useContext } from \"react\"\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\"\nimport { connect, Provider } from \"react-redux\"\nimport setAuthToken from \"./utils/setAuthToken\"\nimport Cart from \"./components/Cart/Cart\"\nimport NavigationBar from \"./components/Layout/NavigationBar\"\nimport Register from \"./components/Auth/Register\"\nimport Login from \"./components/Auth/Login\"\nimport PrivateRoute from \"./components/Routing/PrivateRoute\"\nimport MovieList from \"./components/Movies/MovieList\"\nimport Landing from \"./components/Layout/Landing\"\nimport { loadUser } from \"./actions/auth\"\nimport store from \"./store\"\nimport Alert from \"./components/Layout/Alerts\"\nimport MovieDetails from \"./components/Movies/MovieDetails\"\nimport Checkout from \"./components/Cart/Checkout\"\nimport TvShows from \"./components/TvShows/TvShows\"\nimport TvShowDetails from \"./components/TvShows/TvShowDetails\"\nimport TopRatedMovies from \"./components/Movies/TopRatedMovies\"\nimport UpcomingMovies from \"./components/Movies/UpcomingMovies\"\nimport { googleAuth } from \"./actions/auth\"\nimport { useAuth0 } from \"@auth0/auth0-react\"\nimport Spinner from \"./components/Spinner/LoadSpinner\"\nimport { fetchItems } from \"./actions/movie\"\nimport \"./App.css\"\n\nimport { createBrowserHistory } from \"history\"\nimport MovieNav from \"./components/Movies/MovieNav\"\n\nconst history = createBrowserHistory()\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token)\n}\n\nconst App = ({ authenticated }) => {\n  const { user, isAuthenticated, isLoading, getAccessTokenSilently } =\n    useAuth0()\n\n  useEffect(() => {\n    store.store.dispatch(loadUser())\n  }, [])\n\n  return (\n    <div>\n      <Router history={history}>\n        <NavigationBar />\n        <Alert />\n        <Switch>\n          <Route exact path=\"/\" component={MovieList} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/login\" component={!authenticated ? Login : MovieList} />\n          <Route path=\"/tv_shows\" component={TvShows} />\n          <Route path=\"/movie_info/:id\" component={MovieDetails} />\n          <Route path=\"/upcoming\" component={UpcomingMovies} />\n          <Route path=\"/top_rated\" component={TopRatedMovies} />\n          <PrivateRoute path=\"/show_details\" component={TvShowDetails} />\n          <Route path=\"/cart\" component={Cart} />\n          <PrivateRoute path=\"/checkout\" component={Checkout} />\n          <Route\n            path=\"\"\n            component={() => (\n              <h1 style={{ textAlign: \"center\", fontSize: \"70px\" }}>\n                (404) Page not found.\n              </h1>\n            )}\n          />\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  authenticated: state.auth.authenticated,\n  isLoading: state.auth.isLoading,\n})\n\nexport default connect(mapStateToProps)(App)\n"]},"metadata":{},"sourceType":"module"}