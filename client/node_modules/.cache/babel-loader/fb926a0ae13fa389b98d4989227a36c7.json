{"ast":null,"code":"import { ADD_TO_CART, LOAD_CART, CART_ERROR, DELETE_ITEM, PRICE_TOTAL, GUEST_CART_ADD, GUEST_CART_LOAD, DELETE_GUEST_MOVIE, GUEST_PRICE_TOTAL } from \"../actions/types\";\nconst initialState = {\n  guestCart: [],\n  cart: [],\n  totalPrice: 0.0,\n  guestTotal: 0.0,\n  loading: true\n};\nexport default function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case ADD_TO_CART:\n      return { ...state,\n        cart: [...state.cart, payload]\n      };\n\n    case GUEST_CART_ADD:\n      return { ...state,\n        guestCart: [...state.guestCart, payload.movie],\n        guestTotal: state.guestTotal + payload.price\n      };\n\n    case GUEST_CART_LOAD:\n      return { ...state,\n        guestCart: [...state.guestCart.map(m => m)],\n        loading: false\n      };\n\n    case GUEST_PRICE_TOTAL:\n      return { ...state,\n        ...state.guestTotal\n      };\n\n    case DELETE_GUEST_MOVIE:\n      return { ...state,\n        guestCart: state.guestCart.filter(m => m.id !== payload.id),\n        guestTotal: state.guestTotal - payload.price\n      };\n\n    case LOAD_CART:\n      return { ...state,\n        cart: payload,\n        loading: false\n      };\n\n    case PRICE_TOTAL:\n      return { ...state,\n        totalPrice: 0.0,\n        totalPrice: payload\n      };\n\n    case DELETE_ITEM:\n      return { ...state,\n        cart: state.cart.filter(item => item.index !== payload.index),\n        totalPrice: state.totalPrice - payload.price\n      };\n\n    case CART_ERROR:\n      return { ...state,\n        cart: state.cart\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/idris/Documents/Dev/plex-cinema/client/src/reducers/cart.js"],"names":["ADD_TO_CART","LOAD_CART","CART_ERROR","DELETE_ITEM","PRICE_TOTAL","GUEST_CART_ADD","GUEST_CART_LOAD","DELETE_GUEST_MOVIE","GUEST_PRICE_TOTAL","initialState","guestCart","cart","totalPrice","guestTotal","loading","state","action","type","payload","movie","price","map","m","filter","id","item","index"],"mappings":"AAAA,SACEA,WADF,EAEEC,SAFF,EAGEC,UAHF,EAIEC,WAJF,EAKEC,WALF,EAMEC,cANF,EAOEC,eAPF,EAQEC,kBARF,EASEC,iBATF,QAUO,kBAVP;AAYA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,EADQ;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,UAAU,EAAE,GAHO;AAInBC,EAAAA,UAAU,EAAE,GAJO;AAKnBC,EAAAA,OAAO,EAAE;AALU,CAArB;AAQA,eAAe,YAAwC;AAAA,MAA9BC,KAA8B,uEAAtBN,YAAsB;AAAA,MAARO,MAAQ;AACrD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACE,SAAKjB,WAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELJ,QAAAA,IAAI,EAAE,CAAC,GAAGI,KAAK,CAACJ,IAAV,EAAgBO,OAAhB;AAFD,OAAP;;AAIF,SAAKb,cAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELL,QAAAA,SAAS,EAAE,CAAC,GAAGK,KAAK,CAACL,SAAV,EAAqBQ,OAAO,CAACC,KAA7B,CAFN;AAGLN,QAAAA,UAAU,EAAEE,KAAK,CAACF,UAAN,GAAmBK,OAAO,CAACE;AAHlC,OAAP;;AAKF,SAAKd,eAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELL,QAAAA,SAAS,EAAE,CAAC,GAAGK,KAAK,CAACL,SAAN,CAAgBW,GAAhB,CAAqBC,CAAD,IAAOA,CAA3B,CAAJ,CAFN;AAGLR,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKN,iBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAEL,WAAGA,KAAK,CAACF;AAFJ,OAAP;;AAIF,SAAKN,kBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELL,QAAAA,SAAS,EAAEK,KAAK,CAACL,SAAN,CAAgBa,MAAhB,CAAwBD,CAAD,IAAOA,CAAC,CAACE,EAAF,KAASN,OAAO,CAACM,EAA/C,CAFN;AAGLX,QAAAA,UAAU,EAAEE,KAAK,CAACF,UAAN,GAAmBK,OAAO,CAACE;AAHlC,OAAP;;AAKF,SAAKnB,SAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELJ,QAAAA,IAAI,EAAEO,OAFD;AAGLJ,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKV,WAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELH,QAAAA,UAAU,EAAE,GAFP;AAGLA,QAAAA,UAAU,EAAEM;AAHP,OAAP;;AAKF,SAAKf,WAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELJ,QAAAA,IAAI,EAAEI,KAAK,CAACJ,IAAN,CAAWY,MAAX,CAAmBE,IAAD,IAAUA,IAAI,CAACC,KAAL,KAAeR,OAAO,CAACQ,KAAnD,CAFD;AAGLd,QAAAA,UAAU,EAAEG,KAAK,CAACH,UAAN,GAAmBM,OAAO,CAACE;AAHlC,OAAP;;AAKF,SAAKlB,UAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELJ,QAAAA,IAAI,EAAEI,KAAK,CAACJ;AAFP,OAAP;;AAIF;AACE,aAAOI,KAAP;AArDJ;AAuDD","sourcesContent":["import {\n  ADD_TO_CART,\n  LOAD_CART,\n  CART_ERROR,\n  DELETE_ITEM,\n  PRICE_TOTAL,\n  GUEST_CART_ADD,\n  GUEST_CART_LOAD,\n  DELETE_GUEST_MOVIE,\n  GUEST_PRICE_TOTAL\n} from \"../actions/types\";\n\nconst initialState = {\n  guestCart: [],\n  cart: [],\n  totalPrice: 0.0,\n  guestTotal: 0.0,\n  loading: true,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, payload],\n      };\n    case GUEST_CART_ADD:\n      return {\n        ...state,\n        guestCart: [...state.guestCart, payload.movie],\n        guestTotal: state.guestTotal + payload.price,\n      };\n    case GUEST_CART_LOAD:\n      return {\n        ...state,\n        guestCart: [...state.guestCart.map((m) => m)],\n        loading: false,\n      };\n    case GUEST_PRICE_TOTAL:\n      return {\n        ...state,\n        ...state.guestTotal\n      }  \n    case DELETE_GUEST_MOVIE:\n      return {\n        ...state,\n        guestCart: state.guestCart.filter((m) => m.id !== payload.id),\n        guestTotal: state.guestTotal - payload.price,\n      };\n    case LOAD_CART:\n      return {\n        ...state,\n        cart: payload,\n        loading: false,\n      };\n    case PRICE_TOTAL:\n      return {\n        ...state,\n        totalPrice: 0.0,\n        totalPrice: payload,\n      };\n    case DELETE_ITEM:\n      return {\n        ...state,\n        cart: state.cart.filter((item) => item.index !== payload.index),\n        totalPrice: state.totalPrice - payload.price,\n      };\n    case CART_ERROR:\n      return {\n        ...state,\n        cart: state.cart,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}