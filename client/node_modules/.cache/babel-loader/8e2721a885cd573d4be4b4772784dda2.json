{"ast":null,"code":"import { ADD_TO_CART, CART_ERROR, LOAD_CART, DELETE_ITEM, PRICE_TOTAL, CHANGE_LOAD, GUEST_CART_ADD, GUEST_CART_LOAD, DELETE_GUEST_MOVIE, GUEST_PRICE_TOTAL } from \"./types\";\nimport axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport ls from \"local-storage\";\nexport const addToCart = (movie, auth, price) => async dispatch => {\n  const body = JSON.stringify(movie);\n\n  try {\n    if (!auth) {\n      dispatch({\n        type: GUEST_CART_ADD,\n        payload: {\n          movie,\n          price\n        }\n      }); // dispatch(setAlert(\"Item Added!\", \"success\", 3000))\n    } else {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const res = await axios.post(`/api/cart`, body, config);\n      dispatch({\n        type: ADD_TO_CART,\n        payload: res.data\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: CART_ERROR\n    });\n  }\n};\nexport const addToCartTvShow = item => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify(item);\n\n  try {\n    const res = await axios.post(\"/api/cart/tv_show\", body, config);\n    dispatch({\n      type: ADD_TO_CART,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: CART_ERROR\n    });\n  }\n};\nexport const loadCart = auth => async dispatch => {\n  try {\n    if (!auth) {\n      dispatch({\n        type: GUEST_CART_LOAD\n      });\n    } else {\n      const res = await axios.get(\"/api/cart\");\n      dispatch({\n        type: LOAD_CART,\n        payload: res.data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: CART_ERROR\n    });\n  }\n};\nexport const cartItems = cart => async dispatch => {\n  try {\n    const res = await axios.post(\"/api/cart/guestCart\", cart);\n    console.log(res.data);\n    dispatch({\n      type: LOAD_CART,\n      payload: res.data\n    });\n  } catch (error) {\n    console.error.apply(error);\n  }\n};\nexport const deleteItem = (id, index, price, auth) => async dispatch => {\n  try {\n    if (!auth) {\n      dispatch({\n        type: \"DELETE_GUEST_MOVIE\",\n        payload: {\n          id,\n          index,\n          price\n        }\n      });\n      dispatch(setAlert(\"Item Removed!\", \"danger\", 2000));\n    } else {\n      await axios.delete(`api/cart/${id}`);\n      dispatch({\n        type: DELETE_ITEM,\n        payload: {\n          index,\n          price\n        }\n      });\n      dispatch(setAlert(\"Item Removed\", \"success\"));\n    }\n  } catch (err) {\n    dispatch({\n      type: CART_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const getPriceTotal = (id, auth) => async dispatch => {\n  try {\n    if (!auth) {\n      dispatch({\n        type: GUEST_PRICE_TOTAL\n      });\n    } else {\n      const res = await axios.get(`/api/cart/total/${id}`);\n      dispatch({\n        type: PRICE_TOTAL,\n        payload: res.data\n      });\n    }\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const auth0_addToCart = movie => async dispatch => {\n  try {\n    dispatch({\n      type: ADD_TO_CART,\n      payload: movie\n    });\n  } catch (err) {\n    dispatch({\n      type: CART_ERROR\n    });\n  }\n};","map":{"version":3,"sources":["/Users/idris/Documents/Dev/plex-cinema/client/src/actions/cart.js"],"names":["ADD_TO_CART","CART_ERROR","LOAD_CART","DELETE_ITEM","PRICE_TOTAL","CHANGE_LOAD","GUEST_CART_ADD","GUEST_CART_LOAD","DELETE_GUEST_MOVIE","GUEST_PRICE_TOTAL","axios","setAlert","ls","addToCart","movie","auth","price","dispatch","body","JSON","stringify","type","payload","config","headers","res","post","data","err","addToCartTvShow","item","loadCart","get","error","cartItems","cart","console","log","apply","deleteItem","id","index","delete","msg","response","statusText","status","getPriceTotal","auth0_addToCart"],"mappings":"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","sourcesContent":["import {\n  ADD_TO_CART,\n  CART_ERROR,\n  LOAD_CART,\n  DELETE_ITEM,\n  PRICE_TOTAL,\n  CHANGE_LOAD,\n  GUEST_CART_ADD,\n  GUEST_CART_LOAD,\n  DELETE_GUEST_MOVIE,\n  GUEST_PRICE_TOTAL,\n} from \"./types\"\nimport axios from \"axios\"\nimport { setAlert } from \"./alert\"\nimport ls from \"local-storage\"\n\nexport const addToCart = (movie, auth, price) => async (dispatch) => {\n  const body = JSON.stringify(movie)\n\n  try {\n    if (!auth) {\n      dispatch({\n        type: GUEST_CART_ADD,\n        payload: { movie, price },\n      })\n      // dispatch(setAlert(\"Item Added!\", \"success\", 3000))\n    } else {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n\n      const res = await axios.post(`/api/cart`, body, config)\n      dispatch({\n        type: ADD_TO_CART,\n        payload: res.data,\n      })\n    }\n  } catch (err) {\n    dispatch({\n      type: CART_ERROR,\n    })\n  }\n}\n\nexport const addToCartTvShow = (item) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }\n\n  const body = JSON.stringify(item)\n\n  try {\n    const res = await axios.post(\"/api/cart/tv_show\", body, config)\n\n    dispatch({\n      type: ADD_TO_CART,\n      payload: res.data,\n    })\n  } catch (err) {\n    dispatch({\n      type: CART_ERROR,\n    })\n  }\n}\n\nexport const loadCart = (auth) => async (dispatch) => {\n  try {\n    if (!auth) {\n      dispatch({\n        type: GUEST_CART_LOAD,\n      })\n    } else {\n      const res = await axios.get(\"/api/cart\")\n      dispatch({\n        type: LOAD_CART,\n        payload: res.data,\n      })\n    }\n  } catch (error) {\n    dispatch({\n      type: CART_ERROR,\n    })\n  }\n}\n\nexport const cartItems = (cart) => async (dispatch) => {\n  try {\n    const res = await axios.post(\"/api/cart/guestCart\", cart)\n\n    console.log(res.data)\n    dispatch({\n      type: LOAD_CART,\n      payload: res.data,\n    })\n  } catch (error) {\n    console.error.apply(error)\n  }\n}\n\nexport const deleteItem = (id, index, price, auth) => async (dispatch) => {\n  try {\n    if (!auth) {\n      dispatch({\n        type: \"DELETE_GUEST_MOVIE\",\n        payload: { id, index, price },\n      })\n      dispatch(setAlert(\"Item Removed!\", \"danger\", 2000))\n    } else {\n      await axios.delete(`api/cart/${id}`)\n      dispatch({\n        type: DELETE_ITEM,\n        payload: { index, price },\n      })\n      dispatch(setAlert(\"Item Removed\", \"success\"))\n    }\n  } catch (err) {\n    dispatch({\n      type: CART_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    })\n  }\n}\n\nexport const getPriceTotal = (id, auth) => async (dispatch) => {\n  try {\n    if (!auth) {\n      dispatch({\n        type: GUEST_PRICE_TOTAL,\n      })\n    } else {\n      const res = await axios.get(`/api/cart/total/${id}`)\n      dispatch({\n        type: PRICE_TOTAL,\n        payload: res.data,\n      })\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const auth0_addToCart = (movie) => async (dispatch) => {\n  try {\n    dispatch({\n      type: ADD_TO_CART,\n      payload: movie,\n    })\n  } catch (err) {\n    dispatch({\n      type: CART_ERROR,\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}