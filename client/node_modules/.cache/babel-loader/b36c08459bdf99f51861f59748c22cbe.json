{"ast":null,"code":"var _jsxFileName = \"/Users/idris/Documents/Dev/plex-cinema/client/src/components/Routing/PrivateRoute.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { withAuthenticationRequired } from \"@auth0/auth0-react\";\n\nconst PrivateRoute = _ref => {\n  let {\n    component: Component,\n    auth: {\n      googleAuth,\n      loading,\n      authenticated\n    },\n    ...rest\n  } = _ref;\n  const {\n    isAuthenticated\n  } = useAuth0();\n\n  const checkAuth = async () => {\n    try {\n      let isAuth = await isAuthenticated;\n      return isAuth;\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => authenticated && !loading ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"sources":["/Users/idris/Documents/Dev/plex-cinema/client/src/components/Routing/PrivateRoute.js"],"names":["React","useEffect","useState","Route","Redirect","PropTypes","connect","useAuth0","withAuthenticationRequired","PrivateRoute","component","Component","auth","googleAuth","loading","authenticated","rest","isAuthenticated","checkAuth","isAuth","err","console","error","props","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,0BAAT,QAA2C,oBAA3C;;AAEA,MAAMC,YAAY,GAAG,QAIf;AAAA,MAJgB;AACpBC,IAAAA,SAAS,EAAEC,SADS;AAEpBC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,UAAF;AAAcC,MAAAA,OAAd;AAAuBC,MAAAA;AAAvB,KAFc;AAGpB,OAAGC;AAHiB,GAIhB;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAsBV,QAAQ,EAApC;;AAEA,QAAMW,SAAS,GAAG,YAAY;AAC5B,QAAI;AACF,UAAIC,MAAM,GAAG,MAAMF,eAAnB;AACA,aAAOE,MAAP;AACD,KAHD,CAGE,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF,GAPD;;AASA,sBACE,oBAAC,KAAD,oBACMJ,IADN;AAEE,IAAA,MAAM,EAAGO,KAAD,IACLR,aAAD,IAAmB,CAACD,OAApB,gBACE,oBAAC,SAAD,oBAAeS,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,gBAGE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAYD,CA5BD;;AA8BA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCb,EAAAA,IAAI,EAAEa,KAAK,CAACb;AADsB,CAAZ,CAAxB;;AAIA,eAAeN,OAAO,CAACkB,eAAD,CAAP,CAAyBf,YAAzB,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { withAuthenticationRequired } from \"@auth0/auth0-react\";\n\nconst PrivateRoute = ({\n  component: Component,\n  auth: { googleAuth, loading, authenticated },\n  ...rest\n}) => {\n  const { isAuthenticated } = useAuth0();\n\n  const checkAuth = async () => {\n    try {\n      let isAuth = await isAuthenticated;\n      return isAuth;\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        (authenticated) && !loading ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n"]},"metadata":{},"sourceType":"module"}