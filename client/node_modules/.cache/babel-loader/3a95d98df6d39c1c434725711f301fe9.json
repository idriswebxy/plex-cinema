{"ast":null,"code":"var _jsxFileName = \"/Users/idris/Documents/Dev/plex-cinema/client/src/components/Movies/MovieList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Spinner from \"../Spinner/LoadSpinner\";\nimport { addToCart, loadCart } from \"../../actions/cart\";\nimport { fetchItems, nextPage, prevPage, loadMovies, loadChange, loadMoreItems } from \"../../actions/movie\";\nimport { NOW_PLAYING_MOVIES_URL, API_KEY, API_URL } from \"../../config/config\";\nimport { Redirect, BrowserRouter as Router } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Movie from \"./MovieCard\";\nimport SearchBar from \"../Search/Search\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport MovieCard from \"./MovieCard\";\nimport CarouselSlide from \"./Carousel\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport LoadSpinner from \"../Spinner/LoadSpinner\";\nimport Button from \"react-bootstrap/Button\";\nimport CategoryNav from \"../Layout/CategoryNav\";\nimport ls from \"local-storage\";\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport TopRatedMovies from \"./TopRatedMovies\";\nimport MovieNav from \"./MovieNav\";\nconst styles = {\n  padding: \"10px\",\n  color: \"black\",\n  textAlign: \"center\"\n};\nconst responsive = {\n  superLargeDesktop: {\n    // the naming can be any, depends on you.\n    breakpoint: {\n      max: 4000,\n      min: 3000\n    },\n    items: 5\n  },\n  desktop: {\n    breakpoint: {\n      max: 3000,\n      min: 1024\n    },\n    items: 5\n  },\n  tablet: {\n    breakpoint: {\n      max: 1024,\n      min: 464\n    },\n    items: 2\n  },\n  mobile: {\n    breakpoint: {\n      max: 464,\n      min: 0\n    },\n    items: 3\n  }\n};\n\nconst MovieList = ({\n  addToCart,\n  loadCart,\n  loading,\n  // movies,\n  fetchItems,\n  page,\n  totalPages,\n  loadMoreItems,\n  authenticated,\n  history,\n  cart\n}) => {\n  const {\n    user,\n    isAuthenticated,\n    isLoading,\n    getAccessTokenSilently\n  } = useAuth0();\n  let endpoint = \"\";\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    fetch(NOW_PLAYING_MOVIES_URL).then(res => res.json()).then(data => setMovies([...movies, data.results]));\n  }, []);\n\n  const loadMore = () => {\n    window.onscroll = function (ev) {\n      if (window.innerHeight + window.scrollY >= document.body.offsetHeight) {\n        loadMoreItems(NOW_PLAYING_MOVIES_URL, page, \"now_playing\");\n      }\n    };\n  }; // if (loading) {\n  //   return <LoadSpinner />\n  // }\n\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MovieNav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SearchBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, loading ? /*#__PURE__*/React.createElement(LoadSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }) : movies.map((movie, key) => /*#__PURE__*/React.createElement(Col, {\n    key: key,\n    xs: 6,\n    sm: 3,\n    md: 4,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MovieCard, {\n    movie: movie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  })))), page <= totalPages ? loadMore() : /*#__PURE__*/React.createElement(LoadSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 42\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({// authenticated: state.auth.authenticated,\n  // movies: state.movie.moviesNowPlaying,\n  // page: state.movie.moviePage,\n  // searchedMovie: state.movie.searchedMovie,\n  // totalPages: state.movie.totalPages,\n  // cart: state.cart.cart,\n  // loading: state.movie.isLoading,\n});\n\nexport default connect(mapStateToProps, {\n  addToCart,\n  loadCart,\n  nextPage,\n  prevPage,\n  loadMovies,\n  fetchItems,\n  loadMoreItems\n})(MovieList);","map":{"version":3,"sources":["/Users/idris/Documents/Dev/plex-cinema/client/src/components/Movies/MovieList.js"],"names":["React","useEffect","useState","Spinner","addToCart","loadCart","fetchItems","nextPage","prevPage","loadMovies","loadChange","loadMoreItems","NOW_PLAYING_MOVIES_URL","API_KEY","API_URL","Redirect","BrowserRouter","Router","connect","Movie","SearchBar","useAuth0","MovieCard","CarouselSlide","Container","Row","Col","LoadSpinner","Button","CategoryNav","ls","Carousel","TopRatedMovies","MovieNav","styles","padding","color","textAlign","responsive","superLargeDesktop","breakpoint","max","min","items","desktop","tablet","mobile","MovieList","loading","page","totalPages","authenticated","history","cart","user","isAuthenticated","isLoading","getAccessTokenSilently","endpoint","movies","setMovies","fetch","then","res","json","data","results","loadMore","window","onscroll","ev","innerHeight","scrollY","document","body","offsetHeight","map","movie","key","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,oBAApC;AACA,SACEC,UADF,EAEEC,QAFF,EAGEC,QAHF,EAIEC,UAJF,EAKEC,UALF,EAMEC,aANF,QAOO,qBAPP;AAQA,SAASC,sBAAT,EAAiCC,OAAjC,EAA0CC,OAA1C,QAAyD,qBAAzD;AACA,SAASC,QAAT,EAAmBC,aAAa,IAAIC,MAApC,QAAkD,kBAAlD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,YAA1B;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,EAAP,MAAe,eAAf;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAO,qCAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE,MADI;AAEbC,EAAAA,KAAK,EAAE,OAFM;AAGbC,EAAAA,SAAS,EAAE;AAHE,CAAf;AAMA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,iBAAiB,EAAE;AACjB;AACAC,IAAAA,UAAU,EAAE;AAAEC,MAAAA,GAAG,EAAE,IAAP;AAAaC,MAAAA,GAAG,EAAE;AAAlB,KAFK;AAGjBC,IAAAA,KAAK,EAAE;AAHU,GADF;AAMjBC,EAAAA,OAAO,EAAE;AACPJ,IAAAA,UAAU,EAAE;AAAEC,MAAAA,GAAG,EAAE,IAAP;AAAaC,MAAAA,GAAG,EAAE;AAAlB,KADL;AAEPC,IAAAA,KAAK,EAAE;AAFA,GANQ;AAUjBE,EAAAA,MAAM,EAAE;AACNL,IAAAA,UAAU,EAAE;AAAEC,MAAAA,GAAG,EAAE,IAAP;AAAaC,MAAAA,GAAG,EAAE;AAAlB,KADN;AAENC,IAAAA,KAAK,EAAE;AAFD,GAVS;AAcjBG,EAAAA,MAAM,EAAE;AACNN,IAAAA,UAAU,EAAE;AAAEC,MAAAA,GAAG,EAAE,GAAP;AAAYC,MAAAA,GAAG,EAAE;AAAjB,KADN;AAENC,IAAAA,KAAK,EAAE;AAFD;AAdS,CAAnB;;AAoBA,MAAMI,SAAS,GAAG,CAAC;AACjB3C,EAAAA,SADiB;AAEjBC,EAAAA,QAFiB;AAGjB2C,EAAAA,OAHiB;AAIjB;AACA1C,EAAAA,UALiB;AAMjB2C,EAAAA,IANiB;AAOjBC,EAAAA,UAPiB;AAQjBvC,EAAAA,aARiB;AASjBwC,EAAAA,aATiB;AAUjBC,EAAAA,OAViB;AAWjBC,EAAAA;AAXiB,CAAD,KAYZ;AACJ,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,eAAR;AAAyBC,IAAAA,SAAzB;AAAoCC,IAAAA;AAApC,MACJpC,QAAQ,EADV;AAEA,MAAIqC,QAAQ,GAAG,EAAf;AAEA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsB1D,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd4D,IAAAA,KAAK,CAACjD,sBAAD,CAAL,CACGkD,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAUL,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAYM,IAAI,CAACC,OAAjB,CAAD,CAF3B;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,QAAQ,GAAG,MAAM;AACrBC,IAAAA,MAAM,CAACC,QAAP,GAAkB,UAAUC,EAAV,EAAc;AAC9B,UAAIF,MAAM,CAACG,WAAP,GAAqBH,MAAM,CAACI,OAA5B,IAAuCC,QAAQ,CAACC,IAAT,CAAcC,YAAzD,EAAuE;AACrEhE,QAAAA,aAAa,CAACC,sBAAD,EAAyBqC,IAAzB,EAA+B,aAA/B,CAAb;AACD;AACF,KAJD;AAKD,GAND,CAbI,CAqBJ;AACA;AACA;;;AAEA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,gBACN,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAGNW,MAAM,CAACiB,GAAP,CAAW,CAACC,KAAD,EAAQC,GAAR,kBACT,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAEA,GAAV;AAAe,IAAA,EAAE,EAAE,CAAnB;AAAsB,IAAA,EAAE,EAAE,CAA1B;AAA6B,IAAA,EAAE,EAAE,CAAjC;AAAoC,IAAA,EAAE,EAAE,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAED,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAJJ,CAHF,EAcG5B,IAAI,IAAIC,UAAR,GAAqBiB,QAAQ,EAA7B,gBAAkC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdrC,CADF;AAkBD,CAvDD;;AAyDA,MAAMY,eAAe,GAAIC,KAAD,KAAY,CAClC;AACA;AACA;AACA;AACA;AACA;AACA;AAPkC,CAAZ,CAAxB;;AAUA,eAAe9D,OAAO,CAAC6D,eAAD,EAAkB;AACtC3E,EAAAA,SADsC;AAEtCC,EAAAA,QAFsC;AAGtCE,EAAAA,QAHsC;AAItCC,EAAAA,QAJsC;AAKtCC,EAAAA,UALsC;AAMtCH,EAAAA,UANsC;AAOtCK,EAAAA;AAPsC,CAAlB,CAAP,CAQZoC,SARY,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport Spinner from \"../Spinner/LoadSpinner\"\nimport { addToCart, loadCart } from \"../../actions/cart\"\nimport {\n  fetchItems,\n  nextPage,\n  prevPage,\n  loadMovies,\n  loadChange,\n  loadMoreItems,\n} from \"../../actions/movie\"\nimport { NOW_PLAYING_MOVIES_URL, API_KEY, API_URL } from \"../../config/config\"\nimport { Redirect, BrowserRouter as Router } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport Movie from \"./MovieCard\"\nimport SearchBar from \"../Search/Search\"\nimport { useAuth0 } from \"@auth0/auth0-react\"\nimport MovieCard from \"./MovieCard\"\nimport CarouselSlide from \"./Carousel\"\nimport Container from \"react-bootstrap/Container\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport LoadSpinner from \"../Spinner/LoadSpinner\"\nimport Button from \"react-bootstrap/Button\"\nimport CategoryNav from \"../Layout/CategoryNav\"\nimport ls from \"local-storage\"\nimport Carousel from \"react-multi-carousel\"\nimport \"react-multi-carousel/lib/styles.css\"\nimport TopRatedMovies from \"./TopRatedMovies\"\nimport MovieNav from \"./MovieNav\"\n\nconst styles = {\n  padding: \"10px\",\n  color: \"black\",\n  textAlign: \"center\",\n}\n\nconst responsive = {\n  superLargeDesktop: {\n    // the naming can be any, depends on you.\n    breakpoint: { max: 4000, min: 3000 },\n    items: 5,\n  },\n  desktop: {\n    breakpoint: { max: 3000, min: 1024 },\n    items: 5,\n  },\n  tablet: {\n    breakpoint: { max: 1024, min: 464 },\n    items: 2,\n  },\n  mobile: {\n    breakpoint: { max: 464, min: 0 },\n    items: 3,\n  },\n}\n\nconst MovieList = ({\n  addToCart,\n  loadCart,\n  loading,\n  // movies,\n  fetchItems,\n  page,\n  totalPages,\n  loadMoreItems,\n  authenticated,\n  history,\n  cart,\n}) => {\n  const { user, isAuthenticated, isLoading, getAccessTokenSilently } =\n    useAuth0()\n  let endpoint = \"\"\n\n  const [movies, setMovies] = useState([])\n\n  useEffect(() => {\n    fetch(NOW_PLAYING_MOVIES_URL)\n      .then((res) => res.json())\n      .then((data) => setMovies([...movies, data.results]))\n  }, [])\n\n  const loadMore = () => {\n    window.onscroll = function (ev) {\n      if (window.innerHeight + window.scrollY >= document.body.offsetHeight) {\n        loadMoreItems(NOW_PLAYING_MOVIES_URL, page, \"now_playing\")\n      }\n    }\n  }\n\n  // if (loading) {\n  //   return <LoadSpinner />\n  // }\n\n  return (\n    <Container>\n      <MovieNav />\n      <SearchBar />\n      <Row>\n        {loading ? (\n          <LoadSpinner />\n        ) : (\n          movies.map((movie, key) => (\n            <Col key={key} xs={6} sm={3} md={4} lg={3}>\n              <MovieCard movie={movie} />\n            </Col>\n          ))\n        )}\n      </Row>\n      {page <= totalPages ? loadMore() : <LoadSpinner />}\n    </Container>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  // authenticated: state.auth.authenticated,\n  // movies: state.movie.moviesNowPlaying,\n  // page: state.movie.moviePage,\n  // searchedMovie: state.movie.searchedMovie,\n  // totalPages: state.movie.totalPages,\n  // cart: state.cart.cart,\n  // loading: state.movie.isLoading,\n})\n\nexport default connect(mapStateToProps, {\n  addToCart,\n  loadCart,\n  nextPage,\n  prevPage,\n  loadMovies,\n  fetchItems,\n  loadMoreItems,\n})(MovieList)\n"]},"metadata":{},"sourceType":"module"}