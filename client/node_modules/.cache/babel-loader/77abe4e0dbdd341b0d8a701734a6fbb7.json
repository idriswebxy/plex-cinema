{"ast":null,"code":"var _jsxFileName = \"/Users/idris/Documents/Dev/plex-cinema/client/src/components/Auth/Login.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport Spinner from \"../Spinner/LoadSpinner\";\nimport GoogleButton from \"react-google-button\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../actions/auth\";\nimport PropTypes from \"prop-types\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Form from \"react-bootstrap/Form\";\nimport Container from \"@material-ui/core/Container\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Input from \"@material-ui/core/Input\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setAlert } from \"../../actions/alert\";\nimport { cartItems } from \"../../actions/cart\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    color: \"white\"\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    color: \"white\",\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nconst Login = _ref => {\n  let {\n    login,\n    authenticated,\n    loading,\n    setAlert,\n    logCheck,\n    cartItems,\n    guestCart\n  } = _ref;\n  const {\n    isAuthenticated,\n    logout,\n    loginWithRedirect,\n    isLoading\n  } = useAuth0();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const classes = useStyles();\n  useEffect(() => {\n    console.log(guestCart);\n  }, []); // const onChange = (e) => {\n  //   setFormData({ ...formData, [e.target.type]: e.target.value });\n  // };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    login(email, password); // cartItems(guestCart);\n  };\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    onSubmit: e => onSubmit(e),\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"Sign in\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"Email Address\",\n    name: \"email\",\n    value: email,\n    autoComplete: \"email\",\n    autoFocus: true,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, \"Sign In\"))));\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  authenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  authenticated: state.auth.authenticated,\n  page: state.movie.page,\n  loading: state.auth.loading,\n  logCheck: state.auth.logCheck,\n  guestCart: state.cart.guestCart\n});\n\nexport default connect(mapStateToProps, {\n  login,\n  setAlert,\n  cartItems\n})(Login);","map":{"version":3,"sources":["/Users/idris/Documents/Dev/plex-cinema/client/src/components/Auth/Login.js"],"names":["React","useState","useEffect","Redirect","useHistory","Spinner","GoogleButton","connect","login","PropTypes","useAuth0","Form","Container","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Box","Typography","Input","makeStyles","setAlert","cartItems","useStyles","theme","root","color","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Login","authenticated","loading","logCheck","guestCart","isAuthenticated","logout","loginWithRedirect","isLoading","email","setEmail","password","setPassword","classes","console","log","onSubmit","e","preventDefault","target","value","propTypes","func","isRequired","bool","mapStateToProps","state","auth","page","movie","cart"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport Spinner from \"../Spinner/LoadSpinner\";\nimport GoogleButton from \"react-google-button\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../actions/auth\";\nimport PropTypes from \"prop-types\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Form from \"react-bootstrap/Form\";\nimport Container from \"@material-ui/core/Container\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Input from \"@material-ui/core/Input\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setAlert } from \"../../actions/alert\";\nimport { cartItems } from \"../../actions/cart\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    color: \"white\",\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    color: \"white\",\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst Login = ({\n  login,\n  authenticated,\n  loading,\n  setAlert,\n  logCheck,\n  cartItems,\n  guestCart,\n}) => {\n  const { isAuthenticated, logout, loginWithRedirect, isLoading } = useAuth0();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    console.log(guestCart)\n  }, [])\n\n  // const onChange = (e) => {\n  //   setFormData({ ...formData, [e.target.type]: e.target.value });\n  // };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    login(email, password);\n    // cartItems(guestCart);\n  };\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  return (\n    <Container onSubmit={(e) => onSubmit(e)} component=\"main\" maxWidth=\"xs\">\n      {/* <CssBaseline /> */}\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>{/* <LockOutlinedIcon /> */}</Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            value={email}\n            autoComplete=\"email\"\n            autoFocus\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          {/* <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid> */}\n        </form>\n      </div>\n    </Container>\n  );\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  authenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  authenticated: state.auth.authenticated,\n  page: state.movie.page,\n  loading: state.auth.loading,\n  logCheck: state.auth.logCheck,\n  guestCart: state.cart.guestCart,\n});\n\nexport default connect(mapStateToProps, { login, setAlert, cartItems })(Login);\n"]},"metadata":{},"sourceType":"module"}