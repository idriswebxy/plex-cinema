{"ast":null,"code":"var _jsxFileName = \"/Users/idris/Documents/Dev/plex-cinema/client/src/components/Auth/Register.js\";\nimport React, { useState, useEffect } from \"react\"; // import GoogleLogin from \"react-google-login\";\n\nimport PropTypes from \"prop-types\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport setAuthToken from \"../../utils/setAuthToken\";\nimport { setAlert } from \"../../actions/alert\";\nimport { register, setProfile } from \"../../actions/auth\";\nimport Form from \"react-bootstrap/Form\"; // import Button from \"react-bootstrap/Button\";\n// import Container from \"react-bootstrap/esm/Container\";\n\nimport { useForm } from \"react-hook-form\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\"; // import { LockOutlinedIcon } from '@material-ui/icons/LockOutlined';\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Input from \"@material-ui/core/Input\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nconst Register = ({\n  setAlert,\n  authenticated,\n  register\n}) => {\n  // const { user, isAuthenticated, loginWithRedirect, logout } = useAuth0();\n  // const [formData, setFormData] = useState({\n  //   email: \"\",\n  //   password: \"\",\n  //   password2: \"\",\n  // });\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const classes = useStyles(); // const { email, password, password2 } = formData;\n  // const onChange = (e) => {\n  //   setFormData({ ...formData, [e.target.type]: e.target.value });\n  //   console.log(e.target.value);\n  // };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== password2) {\n      setAlert(\"Passwords do not match!\", \"danger\", 3000);\n    } else {\n      register({\n        email,\n        password\n      });\n    }\n  };\n\n  if (authenticated) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    onSubmit: e => onSubmit(e),\n    style: {\n      color: \"white\"\n    },\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Sign in\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"Email Address\",\n    name: \"email\",\n    value: email,\n    autoComplete: \"email\",\n    autoFocus: true,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"Confirm Password\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    value: password2,\n    onChange: e => setPassword2(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, \"Sign In\"))));\n}; // Register.propTypes = {\n//   setAlert: PropTypes.func.isRequired,\n//   register: PropTypes.func.isRequired,\n//   authenticated: PropTypes.bool,\n// };\n\n\nconst mapStateToProps = state => ({\n  authenticated: state.auth.authenticated\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  register\n})(Register);","map":{"version":3,"sources":["/Users/idris/Documents/Dev/plex-cinema/client/src/components/Auth/Register.js"],"names":["React","useState","useEffect","PropTypes","Redirect","connect","setAuthToken","setAlert","register","setProfile","Form","useForm","makeStyles","Container","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Box","Typography","Input","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Register","authenticated","email","setEmail","password","setPassword","password2","setPassword2","classes","onSubmit","e","preventDefault","color","target","value","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import GoogleLogin from \"react-google-login\";\nimport PropTypes from \"prop-types\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport setAuthToken from \"../../utils/setAuthToken\";\nimport { setAlert } from \"../../actions/alert\";\nimport { register, setProfile } from \"../../actions/auth\";\nimport Form from \"react-bootstrap/Form\";\n// import Button from \"react-bootstrap/Button\";\n// import Container from \"react-bootstrap/esm/Container\";\nimport { useForm } from \"react-hook-form\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\n// import { LockOutlinedIcon } from '@material-ui/icons/LockOutlined';\nimport Typography from \"@material-ui/core/Typography\";\nimport Input from \"@material-ui/core/Input\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst Register = ({ setAlert, authenticated, register }) => {\n  // const { user, isAuthenticated, loginWithRedirect, logout } = useAuth0();\n\n  // const [formData, setFormData] = useState({\n  //   email: \"\",\n  //   password: \"\",\n  //   password2: \"\",\n  // });\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n\n  const classes = useStyles();\n\n  // const { email, password, password2 } = formData;\n\n  // const onChange = (e) => {\n  //   setFormData({ ...formData, [e.target.type]: e.target.value });\n  //   console.log(e.target.value);\n  // };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (password !== password2) {\n      setAlert(\"Passwords do not match!\", \"danger\", 3000);\n    } else {\n      register({ email, password });\n    }\n  };\n\n  if (authenticated) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <Container\n      onSubmit={(e) => onSubmit(e)}\n      style={{ color: \"white\" }}\n      component=\"main\"\n      maxWidth=\"xs\"\n    >\n      {/* <CssBaseline /> */}\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>{/* <LockOutlinedIcon /> */}</Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            value={email}\n            autoComplete=\"email\"\n            autoFocus\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Confirm Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={password2}\n            onChange={(e) => setPassword2(e.target.value)}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n};\n\n// Register.propTypes = {\n//   setAlert: PropTypes.func.isRequired,\n//   register: PropTypes.func.isRequired,\n//   authenticated: PropTypes.bool,\n// };\n\nconst mapStateToProps = (state) => ({\n  authenticated: state.auth.authenticated,\n});\n\nexport default connect(mapStateToProps, { setAlert, register })(Register);\n"]},"metadata":{},"sourceType":"module"}