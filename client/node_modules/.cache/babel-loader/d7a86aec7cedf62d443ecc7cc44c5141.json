{"ast":null,"code":"var _jsxFileName = \"/Users/idris/Documents/Dev/plex-cinema/client/src/components/Movies/MovieDetails.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addToCart, loadCart } from \"../../actions/cart\";\nimport { loadMovieDetails, setMovie, getMovie, fetchCast, fetchVideo } from \"../../actions/movie\";\nimport ReactPlayer from \"react-player/youtube\";\nimport PropTypes from \"prop-types\";\nimport LoadSpinner from \"../Spinner/LoadSpinner\"; // import { withRouter } from \"react-router\";\n\nimport { API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE } from \"../../config/config\";\nimport moment from \"moment\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Image from \"react-bootstrap/Image\";\nimport StarRatings from \"react-star-ratings\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from \"axios\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Popover from \"react-bootstrap/Popover\";\nconst styles = {\n  container: {\n    border: \"8px solid black\"\n  },\n  paddingTop: \"16px\",\n  pad: {},\n  row: {\n    border: \"3px dotted yellow\"\n  },\n  mar: {\n    margin: \"20px\"\n  },\n  colStyle: {\n    border: \"3px dotted red\"\n  }\n};\nconst UpdatingPopover = React.forwardRef((_ref, ref) => {\n  let {\n    popper,\n    children,\n    show: _,\n    ...props\n  } = _ref;\n  useEffect(() => {\n    console.log(\"updating!\");\n    popper.scheduleUpdate();\n  }, [children, popper]);\n  return /*#__PURE__*/React.createElement(Popover, Object.assign({\n    ref: ref,\n    content: true\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), children);\n});\n\nconst MovieDetails = _ref2 => {\n  let {\n    movie,\n    addToCart,\n    isLoading,\n    loadMovieDetails,\n    getMovie,\n    loadCart,\n    isLoading_app,\n    voteAverage,\n    withRouter,\n    history,\n    movieID,\n    auth,\n    cart,\n    price = 2.99\n  } = _ref2;\n  const [cast, setCast] = useState([]);\n  const [videoKey, setVideoKey] = useState(null);\n  const [vidSpinner, setVidSpinner] = useState(false);\n\n  const fetchCast = async id => {\n    await fetch(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`).then(res => res.json()).then(data => {\n      setCast(...cast, data.cast.slice(0, 6));\n    });\n  };\n\n  const videoLoader = async id => {\n    try {\n      await fetch(`https://api.themoviedb.org/3/movie/${id}/videos?api_key=${API_KEY}&language=en-US`).then(res => res.json()).then(data => {\n        setVideoKey(data.results[0].key);\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    // setVidSpinner(false);\n    fetchCast(movie.id);\n    videoLoader(movie.id);\n    loadCart(auth);\n    window.scrollTo(0, 0);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundImage: `linear-gradient(to right,\n        rgba(19, 38, 47, 0.7) 0%,\n        rgba(9, 28, 37, 0.7) 100%), url(https://image.tmdb.org/t/p/w1280${movie.backdrop_path})`,\n      backgroundRepeat: \"no-repeat\",\n      backgroundSize: \"cover\",\n      maxHeight: \"100%\",\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: styles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    rounded: true,\n    src: `http://image.tmdb.org/t/p/w342${movie.poster_path}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, movie.title), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, \"Release Date: \", moment(movie.release_date).format(\"YYYY\")), /*#__PURE__*/React.createElement(StarRatings, {\n    starRatedColor: \"yellow\",\n    numberOfStars: 5,\n    rating: movie.vote_average / 2,\n    starDimension: \"25px\",\n    name: \"rating\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }), \"(\", movie.vote_count, \")\", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 35\n    }\n  }, movie.overview), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(OverlayTrigger, {\n    trigger: \"click\",\n    overlay: /*#__PURE__*/React.createElement(UpdatingPopover, {\n      id: \"popover-contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, \"Item Added!\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => addToCart(movie, auth, price),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 19\n    }\n  }, \"Add To Cart \", /*#__PURE__*/React.createElement(\"i\", {\n    class: \"bi bi-cart-plus-fill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 33\n    }\n  })))), \"\\xA0 \\xA0 \\xA0\", /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 15\n    }\n  }, cast.map((actor, key) => /*#__PURE__*/React.createElement(Col, {\n    key: key,\n    xs: 6,\n    lg: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    rounded: true,\n    src: `https://image.tmdb.org/t/p/w92${actor.profile_path}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }\n  }, actor.original_name), \"(\", actor.character, \")\")))))), \"\\xA0 \\xA0 \\xA0\", /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ReactPlayer, {\n    playing: false,\n    controls: true,\n    url: `https://www.youtube.com/watch?v=${videoKey}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }))));\n};\n\nMovieDetails.propTypes = {\n  match: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  movie: state.movie.searchedMovie,\n  isLoading: state.movie.isLoading,\n  isLoading_app: state.auth.isLoading,\n  cast: state.movie.movieCast,\n  videoKey: state.movie.videoKey,\n  movieID: state.movie.movieId,\n  auth: state.auth.authenticated,\n  cart: state.cart.cart\n});\n\nexport default connect(mapStateToProps, {\n  addToCart,\n  loadMovieDetails,\n  getMovie,\n  loadCart\n})(MovieDetails);","map":{"version":3,"sources":["/Users/idris/Documents/Dev/plex-cinema/client/src/components/Movies/MovieDetails.js"],"names":["React","useEffect","useState","connect","addToCart","loadCart","loadMovieDetails","setMovie","getMovie","fetchCast","fetchVideo","ReactPlayer","PropTypes","LoadSpinner","API_KEY","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","moment","Container","Row","Col","Image","StarRatings","Button","axios","OverlayTrigger","Popover","styles","container","border","paddingTop","pad","row","mar","margin","colStyle","UpdatingPopover","forwardRef","ref","popper","children","show","_","props","console","log","scheduleUpdate","MovieDetails","movie","isLoading","isLoading_app","voteAverage","withRouter","history","movieID","auth","cart","price","cast","setCast","videoKey","setVideoKey","vidSpinner","setVidSpinner","id","fetch","then","res","json","data","slice","videoLoader","results","key","error","window","scrollTo","backgroundImage","backdrop_path","backgroundRepeat","backgroundSize","maxHeight","color","poster_path","title","release_date","format","vote_average","vote_count","overview","map","actor","profile_path","original_name","character","propTypes","match","object","isRequired","location","mapStateToProps","state","searchedMovie","movieCast","movieId","authenticated"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addToCart, loadCart } from \"../../actions/cart\";\nimport {\n  loadMovieDetails,\n  setMovie,\n  getMovie,\n  fetchCast,\n  fetchVideo,\n} from \"../../actions/movie\";\nimport ReactPlayer from \"react-player/youtube\";\nimport PropTypes from \"prop-types\";\nimport LoadSpinner from \"../Spinner/LoadSpinner\";\n// import { withRouter } from \"react-router\";\nimport {\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n} from \"../../config/config\";\nimport moment from \"moment\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Image from \"react-bootstrap/Image\";\nimport StarRatings from \"react-star-ratings\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from \"axios\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Popover from \"react-bootstrap/Popover\";\n\nconst styles = {\n  container: { border: \"8px solid black\" },\n  paddingTop: \"16px\",\n  pad: {},\n  row: {\n    border: \"3px dotted yellow\",\n  },\n  mar: {\n    margin: \"20px\",\n  },\n  colStyle: {\n    border: \"3px dotted red\",\n  },\n};\n\nconst UpdatingPopover = React.forwardRef(\n  ({ popper, children, show: _, ...props }, ref) => {\n    useEffect(() => {\n      console.log(\"updating!\");\n      popper.scheduleUpdate();\n    }, [children, popper]);\n\n    return (\n      <Popover ref={ref} content {...props}>\n        {children}\n      </Popover>\n    );\n  }\n);\n\nconst MovieDetails = ({\n  movie,\n  addToCart,\n  isLoading,\n  loadMovieDetails,\n  getMovie,\n  loadCart,\n  isLoading_app,\n  voteAverage,\n  withRouter,\n  history,\n  movieID,\n  auth,\n  cart,\n  price = 2.99,\n}) => {\n  const [cast, setCast] = useState([]);\n  const [videoKey, setVideoKey] = useState(null);\n  const [vidSpinner, setVidSpinner] = useState(false);\n\n  const fetchCast = async (id) => {\n    await fetch(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        setCast(...cast, data.cast.slice(0, 6));\n      });\n  };\n\n  const videoLoader = async (id) => {\n    try {\n      await fetch(\n        `https://api.themoviedb.org/3/movie/${id}/videos?api_key=${API_KEY}&language=en-US`\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          setVideoKey(data.results[0].key);\n        });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    // setVidSpinner(false);\n    fetchCast(movie.id);\n    videoLoader(movie.id);\n    loadCart(auth);\n    window.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <div\n      style={{\n        backgroundImage: `linear-gradient(to right,\n        rgba(19, 38, 47, 0.7) 0%,\n        rgba(9, 28, 37, 0.7) 100%), url(https://image.tmdb.org/t/p/w1280${movie.backdrop_path})`,\n\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"cover\",\n        maxHeight: \"100%\",\n        color: \"white\",\n      }}\n    >\n      <Container>\n        <Row style={styles}>\n          <Image\n            rounded\n            src={`http://image.tmdb.org/t/p/w342${movie.poster_path}`}\n          />\n\n          <Col>\n            <Col>\n              <h3>{movie.title}</h3>\n              <div>\n                Release Date: {moment(movie.release_date).format(\"YYYY\")}\n              </div>\n              <StarRatings\n                starRatedColor=\"yellow\"\n                numberOfStars={5}\n                rating={movie.vote_average / 2}\n                starDimension={\"25px\"}\n                name=\"rating\"\n              />\n              ({movie.vote_count})<p>{movie.overview}</p>\n              <div>\n                <OverlayTrigger\n                  trigger=\"click\"\n                  overlay={\n                    <UpdatingPopover id=\"popover-contained\">\n                      Item Added!\n                    </UpdatingPopover>\n                  }\n                >\n                  <Button onClick={() => addToCart(movie, auth, price)}>\n                    Add To Cart <i class=\"bi bi-cart-plus-fill\"></i>\n                  </Button>\n                </OverlayTrigger>\n              </div>\n              &nbsp; &nbsp; &nbsp;\n              <Row>\n                {cast.map((actor, key) => (\n                  <Col key={key} xs={6} lg={2}>\n                    <Image\n                      rounded\n                      src={`https://image.tmdb.org/t/p/w92${actor.profile_path}`}\n                    />\n                    <div>{actor.original_name}</div>({actor.character})\n                  </Col>\n                ))}\n              </Row>\n            </Col>\n          </Col>\n        </Row>\n        &nbsp; &nbsp; &nbsp;\n        <Row>\n          {\n            <ReactPlayer\n              playing={false}\n              controls={true}\n              url={`https://www.youtube.com/watch?v=${videoKey}`}\n            />\n          }\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nMovieDetails.propTypes = {\n  match: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  movie: state.movie.searchedMovie,\n  isLoading: state.movie.isLoading,\n  isLoading_app: state.auth.isLoading,\n  cast: state.movie.movieCast,\n  videoKey: state.movie.videoKey,\n  movieID: state.movie.movieId,\n  auth: state.auth.authenticated,\n  cart: state.cart.cart,\n});\n\nexport default connect(mapStateToProps, {\n  addToCart,\n  loadMovieDetails,\n  getMovie,\n  loadCart,\n})(MovieDetails);\n"]},"metadata":{},"sourceType":"module"}