{"ast":null,"code":"var _jsxFileName = \"/Users/idris/Documents/Dev/plex-cinema/client/src/components/Movies/MovieCard.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { getMovie, getMovieIds } from \"../../actions/movie\";\nimport Spinner from \"../Spinner/LoadSpinner\";\nimport { addToCart, loadCart, auth0_addToCart } from \"../../actions/cart\";\nimport moment from \"moment\"; // import MovieDetails from \"./MovieDetails\";\n\nimport auth from \"../../reducers/auth\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Figure from \"react-bootstrap/Figure\";\nimport Card from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/Container\";\nimport Image from \"react-bootstrap/Image\";\nconst styles = {\n  textAlign: \"center\",\n  padding: '5px'\n};\n\nconst MovieCard = _ref => {\n  let {\n    movie,\n    getMovie,\n    itemClass\n  } = _ref;\n  const {\n    isAuthenticated\n  } = useAuth0();\n  const [moviePrev, setMoviePrev] = useState(false);\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => {\n    setModal(!modal);\n  };\n\n  let movieCard = /*#__PURE__*/React.createElement(\"div\", {\n    style: styles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/movie_info/${movie.id}`,\n    onClick: () => getMovie(movie.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    rounded: true // fluid\n    ,\n    src: `http://image.tmdb.org/t/p/w342${movie.poster_path}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"grow dib f3-ns no-underline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, movieCard));\n};\n\nconst mapStateToProps = state => ({\n  isLoading: state.movie.isLoading // userId: state.auth.userInfo._id,\n\n});\n\nexport default connect(mapStateToProps, {\n  getMovie,\n  addToCart,\n  auth0_addToCart\n})(MovieCard);","map":{"version":3,"sources":["/Users/idris/Documents/Dev/plex-cinema/client/src/components/Movies/MovieCard.js"],"names":["React","useEffect","useState","Link","connect","useDispatch","getMovie","getMovieIds","Spinner","addToCart","loadCart","auth0_addToCart","moment","auth","useAuth0","Figure","Card","Container","Image","styles","textAlign","padding","MovieCard","movie","itemClass","isAuthenticated","moviePrev","setMoviePrev","modal","setModal","toggle","movieCard","id","poster_path","mapStateToProps","state","isLoading"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,qBAAtC;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,eAA9B,QAAqD,oBAArD;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AAGA,MAAMC,MAAM,GAAG;AACbC,EAAAA,SAAS,EAAE,QADE;AAEbC,EAAAA,OAAO,EAAE;AAFI,CAAf;;AAKA,MAAMC,SAAS,GAAG,QAAoC;AAAA,MAAnC;AAAEC,IAAAA,KAAF;AAASjB,IAAAA,QAAT;AAAmBkB,IAAAA;AAAnB,GAAmC;AACpD,QAAM;AAAEC,IAAAA;AAAF,MAAsBX,QAAQ,EAApC;AAEA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4BzB,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAM,CAAC0B,KAAD,EAAQC,QAAR,IAAoB3B,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAM4B,MAAM,GAAG,MAAM;AACnBD,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACD,GAFD;;AAIA,MAAIG,SAAS,gBACX;AAAK,IAAA,KAAK,EAAEZ,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,eAAcI,KAAK,CAACS,EAAG,EAAlC;AAAqC,IAAA,OAAO,EAAE,MAAM1B,QAAQ,CAACiB,KAAK,CAACS,EAAP,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,OAAO,MADT,CAEE;AAFF;AAGE,IAAA,GAAG,EAAG,iCAAgCT,KAAK,CAACU,WAAY,EAH1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAQE;AAAK,IAAA,KAAK,EAAEd,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,CADF;AAiBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,6BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4CY,SAA5C,CADF,CADF;AAKD,CAjCD;;AAmCA,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAClCC,EAAAA,SAAS,EAAED,KAAK,CAACZ,KAAN,CAAYa,SADW,CAElC;;AAFkC,CAAZ,CAAxB;;AAKA,eAAehC,OAAO,CAAC8B,eAAD,EAAkB;AACtC5B,EAAAA,QADsC;AAEtCG,EAAAA,SAFsC;AAGtCE,EAAAA;AAHsC,CAAlB,CAAP,CAIZW,SAJY,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { getMovie, getMovieIds } from \"../../actions/movie\";\nimport Spinner from \"../Spinner/LoadSpinner\";\nimport { addToCart, loadCart, auth0_addToCart } from \"../../actions/cart\";\nimport moment from \"moment\";\n// import MovieDetails from \"./MovieDetails\";\nimport auth from \"../../reducers/auth\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Figure from \"react-bootstrap/Figure\";\nimport Card from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/Container\";\nimport Image from \"react-bootstrap/Image\";\n\n\nconst styles = {\n  textAlign: \"center\",\n  padding: '5px'\n};\n\nconst MovieCard = ({ movie, getMovie, itemClass }) => {\n  const { isAuthenticated } = useAuth0();\n\n  const [moviePrev, setMoviePrev] = useState(false);\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => {\n    setModal(!modal);\n  };\n\n  let movieCard = (\n    <div style={styles}>\n      <Link to={`/movie_info/${movie.id}`} onClick={() => getMovie(movie.id)}>\n        <Image\n          rounded\n          // fluid\n          src={`http://image.tmdb.org/t/p/w342${movie.poster_path}`}\n        />\n      </Link>\n      <div style={styles}>\n        <div>\n          {/* {movie.title}&nbsp;({moment(movie.release_date).format(\"YYYY\")}) */}\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <a className=\"grow dib f3-ns no-underline\">{movieCard}</a>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isLoading: state.movie.isLoading,\n  // userId: state.auth.userInfo._id,\n});\n\nexport default connect(mapStateToProps, {\n  getMovie,\n  addToCart,\n  auth0_addToCart,\n})(MovieCard);\n"]},"metadata":{},"sourceType":"module"}